name: Build Windows Executable

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Haskell
      uses: haskell-actions/setup@v2
      with:
        ghc-version: '9.4.8'
        cabal-version: '3.10.2.0'
    
    - name: Update Cabal package list
      run: cabal update
    
    - name: Install MSYS2 and SDL2 libraries
      run: |
        # Install Chocolatey if not already installed
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        try {
            choco -v
            echo "Chocolatey is already installed"
        } catch {
            echo "Installing Chocolatey..."
            iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        }
        
        # Install MSYS2
        choco install msys2 -y
        
        # Update MSYS2 packages
        $env:PATH = "C:\tools\msys64\usr\bin;$env:PATH"
        bash -lc "pacman -Syu --noconfirm"
        
        # Install SDL2 and SDL2_ttf via MSYS2/pacman
        bash -lc "pacman -S --noconfirm mingw-w64-x86_64-pkg-config mingw-w64-x86_64-SDL2 mingw-w64-x86_64-SDL2_ttf"
        
        # Show installed packages
        bash -lc "pacman -Q | grep SDL"
        
        # Set up environment variables
        $env:PATH = "C:\tools\msys64\mingw64\bin;$env:PATH"
        echo "C:\tools\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

        # List SDL2 files
        dir C:\tools\msys64\mingw64\bin\SDL2*.dll
        dir C:\tools\msys64\mingw64\include\SDL2
        
        # Set up pkg-config
        $env:PKG_CONFIG_PATH = "C:\tools\msys64\mingw64\lib\pkgconfig"
        echo "PKG_CONFIG_PATH=C:\tools\msys64\mingw64\lib\pkgconfig" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        
        # Verify pkg-config can find SDL2
        bash -lc "pkg-config --cflags --libs sdl2 sdl2_ttf"
    
    - name: Install dependencies
      env:
        PKG_CONFIG_PATH: C:\tools\msys64\mingw64\lib\pkgconfig
      run: |
        # Create a cabal configuration for building with pkgconfig
        echo "package sdl2" > cabal.project.local
        echo "  flags: pkgconfig" >> cabal.project.local
        echo "  extra-lib-dirs: C:\tools\msys64\mingw64\lib" >> cabal.project.local
        echo "  extra-include-dirs: C:\tools\msys64\mingw64\include" >> cabal.project.local
        
        echo "package sdl2-ttf" >> cabal.project.local
        echo "  flags: pkgconfig" >> cabal.project.local
        echo "  extra-lib-dirs: C:\tools\msys64\mingw64\lib" >> cabal.project.local
        echo "  extra-include-dirs: C:\tools\msys64\mingw64\include" >> cabal.project.local
        
        # Look at the cabal.project.local file to verify
        type cabal.project.local
        
        # Install dependencies
        cabal install --lib UISF
        cabal install --lib HSoM
    
    - name: Build
      env:
        PKG_CONFIG_PATH: C:\tools\msys64\mingw64\lib\pkgconfig
        PATH: C:\tools\msys64\mingw64\bin;${{env.PATH}}
      # The cabal.project.local file created earlier is used here
      run: |
        # Additional environment variables to help find the headers
        $env:C_INCLUDE_PATH = "C:\tools\msys64\mingw64\include"
        $env:CPLUS_INCLUDE_PATH = "C:\tools\msys64\mingw64\include"
        
        # Run the build
        cabal build
    
    - name: Create executable directory
      run: |
        mkdir dist 2>nul || echo "dist already exists"
        mkdir dist\windows 2>nul || echo "dist\windows already exists"
    
    - name: Install executable
      env:
        SDL2_DIR: C:/SDL2
        SDL2_LIB_DIR: C:/SDL2/lib/x64
        SDL2_INCLUDE_DIR: C:/SDL2/include
        LD_LIBRARY_PATH: C:/SDL2/lib/x64
      # The cabal.project.local file created earlier is used here
      run: cabal install --installdir=dist/windows exe:euterpea2-project
    
    - name: Rename executable
      run: |
        cd dist/windows
        ren euterpea2-project.exe JustIntonationMusic.exe
    
    - name: Copy DLL dependencies
      run: |
        # Copy all SDL2 DLLs
        dir C:\tools\msys64\mingw64\bin\SDL2*.dll
        copy C:\tools\msys64\mingw64\bin\SDL2*.dll dist\windows\
    
    - name: Copy README
      run: copy WINDOWS_README.md dist/windows/README.md
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: JustIntonationMusic
        path: dist/windows/
